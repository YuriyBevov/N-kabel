/*"use-strict";

(function() {
  const form = document.querySelector('.about__request form');

  if(form) {
    const mailInput = document.getElementById('about-form__email');
console.log('form-validation')
    let confirm = false

    form.addEventListener('submit', (evt) => {
      if(confirm) {
        console.log('ok')
        return
      } else if(!confirm) {
        evt.preventDefault();
        console.log('error')
      }
    })

    form.addEventListener('change', () => {
      if(validateEmail(mailInput.value)) {
        mailInput.style.color = "rgb(0, 0, 0)"
        confirm = true;
      } else {
        mailInput.style.color = "red"
        confirm = false;
      }
    })

    function validateEmail(email) {
      var regexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return regexp.test(String(email).toLowerCase());
    }
  }
})();*/

"use strict";

(function () {
  const picker = document.querySelectorAll(".cable-description__pick-list input");
  const descriptionItem = document.querySelectorAll(".cable-description__description-item");

  for (let i = 1; i < descriptionItem.length; i++) {
    descriptionItem[i].style.display = 'none';
  }

  const onClickHandler = function () {
    const itemId = this.getAttribute('data-id');

    for (let i = 0; i < descriptionItem.length; i++) {
      descriptionItem[i].style.display = 'none';
      descriptionItem[itemId].style.display = 'block';
    }
  }

  for (let i = 0; i < picker.length; i++) {
    picker[i].addEventListener('click', onClickHandler);
  }
})();

"use strict";

(function() {
  const select = document.querySelector('.contacts__select');
  const content = document.querySelectorAll('.contacts__content');

  const onChangeHandler = function () {
    let attr = this.options[select.selectedIndex].id;

    for (let i = 0; i < content.length; i++) {
      content[i].style.display = 'none';
      content[attr].style.display = 'flex';
    }
  }

  if (select) {
    select.addEventListener('change', onChangeHandler)
  }
})();

"use-strict";

(function() {
  const fileInput = document.getElementById('footer-form-file-upload');
  const fileName = document.querySelector('.footer-form__upload-files');

  if (fileInput) {
    fileInput.addEventListener('change', function(event) {
      const input = event.target;

      for (let i = 0; i < input.files.length; i++) {
        fileName.textContent = input.files[i].name;
      }
    });
  }
})();


/*const geo = navigator.geolocation.getCurrentPosition(
  function(position) {

    console.log('широта ' + position.coords.latitude);
    console.log('долгота ' + position.coords.longitude);
    console.log('высота над уровнем моря ' + position.coords.altitude);

    console.log('погрешность в метрах ' + position.coords.accuracy );
    console.log('Погрешность высоты над уровнем моря в метрах. ' + position.coords.altitudeAccuracy);
    console.log('Направление устройства по отношению к северу. ' + position.coords.heading);
    console.log('Скорость в метрах в секунду ' + position.coords.speed);*/
    /*position = {
        coords: {
            latitude - Широта.
            longitude - Долгота.
            altitude - Высота в метрах над уровнем моря.
            accuracy - Погрешность в метрах.
            altitudeAccuracy - Погрешность высоты над уровнем моря в метрах.
            heading - Направление устройства по отношению к северу.
            speed - Скорость в метрах в секунду.
        },
      timestamp - Время извлечения информации.
    */
  /*},

  function(error) {
    console.log(error.type)
  }
)*/

"use strict";

(function () {
  const btn =  document.querySelectorAll('.geo-position__item-extra-btn');

  const closeGeoList = function () {
    for (let i = 0; i < btn.length; i++) {
      btn[i].removeEventListener('click', closeGeoList);
      btn[i].addEventListener('click', openGeoList);
    };
    this.nextElementSibling.classList.add('hidden');
  }

  const openGeoList = function () {
    for (let i = 0; i < btn.length; i++) {
      if(!(btn[i].nextElementSibling.classList.contains('hidden'))) {
        btn[i].nextElementSibling.classList.add('hidden');
      }
    };

    this.removeEventListener('click', openGeoList);
    this.nextElementSibling.classList.remove('hidden');
    this.addEventListener('click', closeGeoList);
  };

  if(btn) {
    for (let i = 0; i < btn.length; i++) {
      btn[i].nextElementSibling.classList.add('hidden');
      btn[i].addEventListener('click', openGeoList);
    };
  }
})();

"use strict";

(function () {
  const ESC_KEYCODE = 27;

  const openBtn = document.getElementById("menu-show-btn");
  const closeBtn = document.getElementById("menu-close-btn");
  const nav = document.querySelector(".nav");
  const overflow = document.querySelector(".nav__wrapper");

  const companyItem = document.querySelector(".nav__item--company");
  const companyBtn = companyItem.querySelector(".nav__link--company");
  const companyList = companyItem.querySelector('ul');

  nav.classList.add("closed"); // закрываю меню после загрузки страницы
  companyList.classList.add('closed'); // закрываю подменю после загрузки страницы

  // удаление слушателей с документа, возвращение первоначального вида

  const removeEventListeners = function () {
    document.removeEventListener('click', hideByClick);
    document.removeEventListener('keydown', hideByEsc);

    if(!companyList.classList.contains('closed')) {
      companyList.classList.add('closed');
    }
    openBtn.addEventListener('click', openMenuByClick);
  }

  const showCompanyList = function() {
    companyList.classList.toggle('closed');
  }

  const openMenuByClick = function (evt) {
    evt.stopPropagation();
    nav.classList.remove("closed");
    document.addEventListener('click', hideByClick);
    document.addEventListener('keydown', hideByEsc);

    openBtn.removeEventListener('click', openMenuByClick);
    closeBtn.addEventListener('click', closeMenuByClick);
  }

  const closeMenuByClick = function () {
    nav.classList.add("closed");

    if(!companyList.classList.contains('closed')) {
      companyList.classList.add('closed');
    }

    closeBtn.removeEventListener('click', closeMenuByClick);
    removeEventListeners();
    openBtn.addEventListener('click', openMenuByClick);
  }

  //--- функции закрытия по клику и пустому месту

  const hideByClick = function (evt) {
    const nav__menu = evt.target == nav || nav.contains(evt.target);

    if (!nav__menu) {
      nav.classList.add('closed');

      removeEventListeners();
    }
  }

  const hideByEsc = function (evt) {
    if (evt.keyCode === ESC_KEYCODE) {
      nav.classList.add('closed');

      removeEventListeners();
    }
  };

  openBtn.addEventListener('click', openMenuByClick);
  companyBtn.addEventListener('click', showCompanyList);
})();

"use strict";

(function () {
  const loader = document.querySelector('.loader');

  const hideLoader = function () {
    setTimeout(endLoading, 500)
    function endLoading () {
      loader.style.display = 'none';
      clearTimeout(hideLoader);
    }
  };

  document.addEventListener("DOMContentLoaded", hideLoader);
})();

"use strict";

(function () {
  const ESC_KEYCODE = 27;

  const orderBtn = document.querySelectorAll('.order-btn');
  const orderModal = document.querySelector(".order-modal");
  const feedbackBtn = document.querySelectorAll('.feedback__btn');
  const feedbackModal = document.querySelector(".feedback-modal");

  let modal = null;

  const removeEventListeners = function () {
    document.removeEventListener('click', hideByClick);
    document.removeEventListener('keydown', hideByEsc);
  }

  const showByClick = function (el) {
    el.classList.remove('hidden')

    document.addEventListener('click', hideByClick);
    document.addEventListener('keydown', hideByEsc);
  }

  const hideByClick = function (evt) {
    if(evt.target === modal) {
      modal.classList.add('hidden');

      removeEventListeners();
      modal = null;
    }
  }

  const hideByEsc = function (evt) {
    if (evt.keyCode === ESC_KEYCODE) {
      modal.classList.add('hidden');

      removeEventListeners();
      modal = null;
    }
  };

  for (let i = 0; i < orderBtn.length; i++) {
    orderBtn[i].addEventListener('click', function (evt) {
      evt.preventDefault();
      modal = orderModal;
      showByClick(modal);
    })
  }

  for (let i = 0; i < feedbackBtn.length; i++) {
    feedbackBtn[i].addEventListener('click', function (evt) {
      evt.preventDefault();
      modal = feedbackModal;
      showByClick(modal);
    })
  }

  const fileUpload = document.querySelector('.modal__group--upload input');
  const fileName = document.querySelector('.modal__group--upload p');

  if (fileUpload) {
    fileUpload.addEventListener('change', function(event) {
      const input = event.target;

      for (let i = 0; i < input.files.length; i++) {
        fileName.textContent = input.files[i].name;
      }
    });
  }
})();


  /*const countInput = document.getElementById('count');

  if (countInput) {
    const inputMask = IMask( countInput, {
      mask: Number,  // enable number mask

      // other options are optional with defaults below
      scale: 2,  // digits after point, 0 for integers
      signed: false,  // disallow negative
      thousandsSeparator: ' ',  // any single char

      // additional number interval options (e.g.)
      min: 1,
      max: 10000000
    });
  }*/

  /*const form = document.querySelector('.order-modal form');

  if(form) {
    const mailInput = document.getElementById('mail');
    const errorMsg = form.querySelector(".order-modal__mail-error");

    let confirm = false

    form.addEventListener('submit', (evt) => {
      if(confirm) {
        return
      } else if(!confirm) {
        evt.preventDefault();
      }
    })

    form.addEventListener('change', () => {
      if(validateEmail(mailInput.value)) {
        errorMsg.style.display = "none";
        confirm = true;
      } else {
        errorMsg.style.display = "block";
        confirm = false;
      }
    })

    function validateEmail(email) {
      var regexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return regexp.test(String(email).toLowerCase());
    }
  }*/

"use strict";

(function () {
    Modernizr.on('webp', function() {
  });
})();

"use strict";

(function () {
  const item = document.querySelectorAll('.stock__filter-box-btn');

  const onClickHandler = function () {

    if(!this.classList.contains('stock__filter-box-btn--active')) {

      for(let i = 0; i < item.length; i++) {
        if(item[i].classList.contains('stock__filter-box-btn--active')) {
          item[i].classList.remove('stock__filter-box-btn--active')
        }
      }

      this.classList.add('stock__filter-box-btn--active');
    }
  }

  for (let i = 0; i < item.length; i++) {
    item[i].addEventListener('click', onClickHandler)
  }
})();

'use strict';

(function () {
  const isDealershipSlider = document.querySelector('.dealership-swiper-container');

  if (isDealershipSlider) {

    const indexPageSwiper = new Swiper ('.dealership-swiper-container', {
      // Optional parameters

      slidesPerView: 2,
      initialSlide: 2,
      centeredSlides: true,
      grabCursor: true,
      slideToClickedSlide: true,

      // Navigation arrows

      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },

      breakpoints: {
        // when window width is >= 836px
        836: {
          slidesPerView: 3,
        },
        // when window width is >= 1160px
        1160: {
          slidesPerView: 5,
        }
      }
    });
  }

  const isUrgentSlider = document.querySelector('.urgent-swiper-container');

  if (isUrgentSlider) {
    const urgentPageSwiper = new Swiper ('.urgent-swiper-container', {
      slidesPerView: 1,

      navigation: {
        nextEl: '.urgent-swiper-button-next',
        prevEl: '.urgent-swiper-button-prev',
      },

      breakpoints: {
        // when window width is >= 836px
        836: {
          slidesPerView: 2,
        },
        // when window width is >= 1160px
        1160: {
          slidesPerView: 3,
        }
      }
    });
  }

  const isCertificateSlider = document.querySelector('.certificate-swiper-container');

  if (isCertificateSlider) {
    const certificatePageSwiper = new Swiper ('.certificate-swiper-container', {
      slidesPerView: 2,
      initialSlide: 2,
      centeredSlides: true,
      grabCursor: true,
      slideToClickedSlide: true,

      breakpoints: {
        // when window width is >= 836px
        836: {
          slidesPerView: 3,
        },
        // when window width is >= 1160px
        1160: {
          slidesPerView: 5,
        }
      }
    });
  }

  const isArticlesSlider = document.querySelector('.articles-swiper-container');

  if (isArticlesSlider) {
    const articlePageSwiper = new Swiper ('.articles-swiper-container', {
      slidesPerView: 2,
      spaceBetween: 12,
      freeMode: true,

      breakpoints: {
        600: {
          slidesPerView: 3,
        },
        // when window width is >= 836px
        836: {
          slidesPerView: 5,
        },
        // when window width is >= 1160px
        1439: {
          slidesPerView: 3,
        }
      },

      pagination: {
        el: '.swiper-pagination',
        type: 'progressbar',
      },
    });
  }

  const isCableDescriptionSlider = document.querySelector('.cable-description-swiper-container');

  if (isCableDescriptionSlider) {
    const articlePageSwiper = new Swiper (isCableDescriptionSlider, {
      grabCursor: true,

      pagination: {
        el: '.swiper-pagination',
        dynamicBullets: true,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
    });
  }
})();

"use strict";

(function () {
  const tab = document.querySelectorAll('.workers__toggle-label');
  const list = document.querySelectorAll('.workers__list');

  const onClickHandler = function () {
    const attr = this.getAttribute('id');

    for (let i = 0; i < list.length; i++) {
      list[i].style.display = 'none';
      list[attr].style.display = 'flex';
    }
  }

  for (let i = 0; i < tab.length; i++) {
    tab[i].addEventListener('click', onClickHandler);
  }
})();
